/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace RakNet {

using System;
using System.Runtime.InteropServices;

public class PacketConsoleLogger : PacketLogger {
  private HandleRef swigCPtr;

  internal PacketConsoleLogger(IntPtr cPtr, bool cMemoryOwn) : base(RakNetPINVOKE.CSharp_PacketConsoleLogger_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PacketConsoleLogger obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PacketConsoleLogger() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RakNetPINVOKE.CSharp_delete_PacketConsoleLogger(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PacketConsoleLogger() : this(RakNetPINVOKE.CSharp_new_PacketConsoleLogger(), true) {
  }

  public virtual void SetLogCommandParser(LogCommandParser lcp) {
    RakNetPINVOKE.CSharp_PacketConsoleLogger_SetLogCommandParser(swigCPtr, LogCommandParser.getCPtr(lcp));
  }

  public override void WriteLog(string str) {
    RakNetPINVOKE.CSharp_PacketConsoleLogger_WriteLog(swigCPtr, str);
  }

}

}
